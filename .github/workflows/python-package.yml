name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CACHE_EPOCH: 1
  # this is only checked in the `build` job
  COVERAGE_THRESHOLD: 83

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - run: python -m pip install nox
    - run: nox -s build
    - uses: actions/upload-artifact@v2
      with:
        name: schemata dist ${{ github.run_number }}
        path: ./dist
    - uses: actions/cache@v2
      with:
        path: .hypothesis
        key: |
          ${{ env.CACHE_EPOCH }}-${{ runner.os }}-hypothesis-${{ hashFiles('pyproject.toml') }}
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: |
          ${{ env.CACHE_EPOCH }}-${{ runner.os }}-pip-build-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ env.CACHE_EPOCH }}-${{ runner.os }}-pip-build-
    - run: nox -s test
    - run: codecov
    - run: nox -s docs
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@4.1.0
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: ./_build/html # The folder the action should deploy.  test:
    name: test ${{ matrix.os }} ${{ matrix.py }}
    needs: [build]
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        py: [3.6, 3.9, pypy3]
        exclude:
          - os: windows
            py: pypy3
        include:
          - os: ubuntu
            pip: python -m pip
            pip-cache: ~/.cache/pip
          - os: macos
            pip: python3 -m pip
            pip-cache: ~/Library/Caches/pip
          - os: windows
            pip: python -m pip
            pip-cache: ~\AppData\Local\pip\Cache
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - if: ${{ matrix.os == 'ubuntu' && matrix.py == 'pypy3' }}
        run: sudo apt-get install -y libxml2-dev libxslt-dev
      - run: ${{ matrix.pip }} install --upgrade pip wheel setuptools
      - uses: actions/download-artifact@v2
        with:
          name: schemata dist ${{ github.run_number }}
          path: ./dist
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.pip-cache }}
          key: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-pip-test-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-pip-test-
      - run: ${{ matrix.pip }} install --find-links=dist schemata[test]
      - run: cd dist && pytest --pyargs schemata -vv
