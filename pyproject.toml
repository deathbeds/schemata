[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core>=3.1,<4"]

[tool]
[tool.flit]
[tool.flit.metadata]
author = "tonyfast"
author-email = "tony.fast@gmail.com"
classifiers = []
home-page = "https://github.com/deathbeds/schemata.git"
keywords = ""
license = "MIT"
maintainer = "tonyfast"
maintainer-email = "tony.fast@gmail.com"
module = "schemata"
requires = [
  "jsonschema",
  "jsonpatch",
  "pyld",
  "uritemplate",
  "typing >=3.7.4 ; python_version < '3.7'",
  "strict_rfc3339",
  "rfc3986",
  "email_validator",
]
requires-python = ">=3.6"

[tool.flit.metadata.urls]

[tool.flit.metadata.requires-extra]
app = ["typer", "jinja2"]
ci = ["codecov"]
docs = ["jupyter-book", "sphinx_sitemap", "black", "isort"]
ipython = ["IPython"]
tasks = ["doit"]
template = ["jinja2", "json-e"]
test = [
  "hypothesis-jsonschema >=0.19.1",
  "hypothesis",
  "ipywidgets",
  "jinja2",
  "json-e",
  "nbval",
  "parse",
  "pytest-cov",
  "pytest",
  "pyyaml",
  "requests",
  "requests_cache",
  "toml",
  "typer",
]
web = ["fastapi", "jinja2"]

[tool.flit.scripts]

[tool.flit.sdist]
include = []

[tool.flit.entrypoints]

[tool.coverage.run]
omit = [
  "*/tests/*",
  "src/schemata/compat/*",
  "src/schemata/ui.py",
  "src/schemata/_schema.py"
]

[tool.coverage.html]
directory = "docs/coverage"

[tool.pytest.ini_options]
addopts = "-vv --nbval -pno:importnb --durations=5 --cov=src/schemata --cov-report=term-missing:skip-covered --no-cov-on-fail"
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS"]
testpaths = ["docs", "src", "src/schemata"]
